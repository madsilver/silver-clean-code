// Code generated by MockGen. DO NOT EDIT.
// Source: internal/adapter/context_server.go

// Package mock_adapter is a generated GoMock package.
package mock_adapter

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockContextServer is a mock of ContextServer interface.
type MockContextServer struct {
	ctrl     *gomock.Controller
	recorder *MockContextServerMockRecorder
}

// MockContextServerMockRecorder is the mock recorder for MockContextServer.
type MockContextServerMockRecorder struct {
	mock *MockContextServer
}

// NewMockContextServer creates a new mock instance.
func NewMockContextServer(ctrl *gomock.Controller) *MockContextServer {
	mock := &MockContextServer{ctrl: ctrl}
	mock.recorder = &MockContextServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContextServer) EXPECT() *MockContextServerMockRecorder {
	return m.recorder
}

// Bind mocks base method.
func (m *MockContextServer) Bind(i interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Bind", i)
	ret0, _ := ret[0].(error)
	return ret0
}

// Bind indicates an expected call of Bind.
func (mr *MockContextServerMockRecorder) Bind(i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Bind", reflect.TypeOf((*MockContextServer)(nil).Bind), i)
}

// JSON mocks base method.
func (m *MockContextServer) JSON(code int, i any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "JSON", code, i)
	ret0, _ := ret[0].(error)
	return ret0
}

// JSON indicates an expected call of JSON.
func (mr *MockContextServerMockRecorder) JSON(code, i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "JSON", reflect.TypeOf((*MockContextServer)(nil).JSON), code, i)
}

// Param mocks base method.
func (m *MockContextServer) Param(name string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Param", name)
	ret0, _ := ret[0].(string)
	return ret0
}

// Param indicates an expected call of Param.
func (mr *MockContextServerMockRecorder) Param(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Param", reflect.TypeOf((*MockContextServer)(nil).Param), name)
}
